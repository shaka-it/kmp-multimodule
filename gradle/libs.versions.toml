[versions]
# Android
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"

# Plugins
composeHotReload = "1.0.0-beta04"
composeMultiplatform = "1.8.2"

# Libraries
kotlin = "2.2.0"
coroutines = "1.10.2"
serialization = "1.9.0"
libres = "1.2.2"
ktor = "3.2.2"
koin = "4.1.0"
sqldelight = "2.1.0"
settings = "1.3.0"
image-loader = "1.10.0"
androidx-appcompat = "1.7.1"
agp = "8.11.1"
androidx-lifecycle = "2.9.1"
androidx-activity = "1.10.1"
decompose = "3.3.0"
essenty = "2.5.0"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composeMultiplatform" }
plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
plugin-sqldelight = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
plugin-libres = { module = "io.github.skeptick.libres:gradle-plugin", version.ref = "libres" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }

sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-wasmjs-driver = { module = "app.cash.sqldelight:web-worker-driver-wasm-js", version.ref = "sqldelight" }
sqldelight-wasmjs-runtime = { module = "app.cash.sqldelight:runtime-wasm-js", version.ref = "sqldelight" }
sqldelight-wasmjs-kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-wasm-js", version.ref = "kotlin" }

multiplatform-settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

image-loader-core = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image-loader" }
image-loader-compose = { module = "io.github.qdsfdhvh:image-loader-extension-compose-resources", version.ref = "image-loader" }

koin-di = { module = "io.insert-koin:koin-core", version.ref = "koin" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }

[bundles]
decompose-compose = [
    "decompose",
    "decompose-compose",
]
decompose-presentation = [
    "decompose",
    "essenty",
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods" }

# Plugins defined by this project
moduleSetup = { id = "module.setup" }
composeSetup = { id = "compose.setup" }